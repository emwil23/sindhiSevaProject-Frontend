{"version":3,"file":"static/js/934.010663fa.chunk.js","mappings":"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","sources":["services/excelService.ts","Components/pages/DirectoriesPage/ViewComponent.tsx","Components/TableComponent/index.tsx","Components/pages/DirectoriesPage/index.tsx","Components/selectOptions.ts"],"sourcesContent":["export const convertToCSV = (objArray: any[], headers: any[]) => {\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    var str = '';\n\n    // adding header\n    var headerLine = '';\n    for (let header of headers) {\n        if (headerLine != '') headerLine += ','\n        headerLine += header.label;\n    }\n    str += headerLine + '\\r\\n';\n    for (var i = 0; i < array.length; i++) {\n        var line = '';\n        for (let header of headers) {\n            if (line != '') line += ','\n            line += array[i][header.value] ? `\"${array[i][header.value]}\"` : '\"-\"';\n        }\n        str += line + '\\r\\n';\n    }\n\n    return str;\n}\n\nexport const exportCSVFile = (headers: any[], items: any[], fileTitle: string) => {\n\n    var csv = convertToCSV(items, headers);\n\n    var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\n\n    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) { // feature detection\n        // Browsers that support HTML5 download attribute\n        var url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n}","import { Select, Image } from 'antd';\nimport Descriptions from 'antd/lib/descriptions';\nimport Spin from 'antd/lib/spin';\nimport { FC, useEffect, useState } from 'react';\nimport { getRequest, patchRequest } from '../../../services/apiHelperService';\nimport { openNotification } from '../../../services/notificationService';\nimport { statusOption } from '../../selectOptions';\n\ninterface Props {\n    items: any,\n    userRole: string,\n    refreshTable?: any\n}\n\nconst ViewComponent: FC<Props> = (props: Props) => {\n\n    const [relationData, setRelationData]: any[] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const items: any = props.items;\n    const isAdmin: boolean = props.userRole === 'admin';\n\n\n\n\n\n    const findRelation = (members: any[]) => {\n        if (!members || members.length === 0) {\n            setLoading(false);\n            return;\n        };\n        members.forEach((value: any) => {\n            fetchRelation(value.relationId, value.relationName).then(() => {\n                if (items?.members.length === relationData.length) {\n                    setLoading(false);\n                }\n            })\n        })\n    }\n\n    const fetchRelation = async (uid: string, relationName: string) => {\n        let relationArray: any[] = relationData;\n        await getRequest('/members', {\n            filter: {\n                where: {\n                    \"uid\": uid\n                }\n            }\n        }).then((data: any) => {\n            relationArray.push({ data: data[0], relationName: relationName })\n            setRelationData(relationArray);\n        });\n    }\n\n    useEffect(() => {\n        findRelation(items?.members);\n        // eslint-disable-next-line\n    }, []);\n\n    const updateData = async (index: string, value: string) => {\n        await patchRequest('/members', items?.id, { [index]: value }).then((res) => {\n            openNotification('Records Successfully Updated');\n            props.refreshTable(true);\n        }).catch(err => openNotification('Some Problem Occured', 'Please try again later.'))\n    }\n\n\n\n    return loading ? (<Spin size='large' />) :\n        <>\n            <Descriptions layout=\"vertical\">\n                { items.profilePicture ? <Descriptions.Item label=\"Profile Picture\" contentStyle={{ color: 'grey' }}>\n                <Image\n                    width={100}\n                    src={`${items.profilePicture}`}\n                    className='rounded'\n                />\n                </Descriptions.Item> : null}\n                <Descriptions.Item label=\"First Name\" contentStyle={{ color: 'grey' }}>{items.firstName}</Descriptions.Item>\n                <Descriptions.Item label=\"Last Name\" contentStyle={{ color: 'grey' }}>{items.lastName}</Descriptions.Item>\n                <Descriptions.Item label=\"Qualification\" contentStyle={{ color: 'grey' }}>{items.qualification}</Descriptions.Item>\n                <Descriptions.Item label=\"Profession\" contentStyle={{ color: 'grey' }}>{items.profession}</Descriptions.Item>\n                <Descriptions.Item label='mobile' contentStyle={{ color: 'grey' }}>{items.mobile}</Descriptions.Item>\n                <Descriptions.Item label='Marital Status' contentStyle={{ color: 'grey' }}>{items.maritalStatus}</Descriptions.Item>\n                <Descriptions.Item label='Gender' contentStyle={{ color: 'grey' }}>{items.gender}</Descriptions.Item>\n                <Descriptions.Item label=\"Email\" contentStyle={{ color: 'grey' }}>{items.email}</Descriptions.Item>\n                <Descriptions.Item label=\"Date Of Birth\" contentStyle={{ color: 'grey' }}>{new Date(items.dob).toDateString()}</Descriptions.Item>\n                <Descriptions.Item label=\"Blood\" contentStyle={{ color: 'grey' }}>{items.blood}</Descriptions.Item>\n                {isAdmin ? <Descriptions.Item label=\"Status\" contentStyle={{ color: 'grey' }}>{\n                    <Select defaultValue={items.status} onChange={(e) => updateData('status', e)}>\n                        {statusOption.map((option: any, index) => {\n                            return (\n                                <Select.Option key={index} value={option.value}>\n                                    {option.label}\n                                </Select.Option>\n                            );\n                        })}\n                    </Select>\n                }</Descriptions.Item> : <Descriptions.Item label=\"active\" contentStyle={{ color: 'grey' }}>{items.active}</Descriptions.Item>}\n                <Descriptions.Item label=\"Address\" contentStyle={{ color: 'grey' }} span={2}>\n                    {items.address}\n                </Descriptions.Item>\n            </Descriptions>\n            {items?.members ? <Descriptions title=\"Family\">\n                {relationData.map((value: any, index: any) => {\n                    return value?.data ? <>\n                        <Descriptions.Item label='Name' key={index}>{`${value.data.firstName} ${value.data.lastName}`}</Descriptions.Item>\n                        <Descriptions.Item label='Relation' key={value.data.uid}>{`${value.relationName}`}</Descriptions.Item>\n                        {items?.anniversary && ['Wife', 'Husband'].includes(value.relationName) ? <Descriptions.Item label='Anniversary' key={value.data.id}>{new Date(items.anniversary).toDateString()}</Descriptions.Item> : <></>}\n                    </> : null;\n                })}\n            </Descriptions> : null}\n\n        </>\n}\n\nexport default ViewComponent;","import { DeleteTwoTone, ExportOutlined, EyeTwoTone, SolutionOutlined } from '@ant-design/icons';\nimport { Button, Input, Modal, Popconfirm, Space, Table, Tag } from \"antd\";\nimport type {\n  ColumnsType,\n  TablePaginationConfig,\n} from \"antd/es/table\";\nimport type { FilterValue, SorterResult } from \"antd/es/table/interface\";\nimport { useEffect, useState, FC } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { deleteRequest, getRequest } from \"../../services/apiHelperService\";\nimport { exportCSVFile } from '../../services/excelService';\nimport ViewComponent from \"../pages/DirectoriesPage/ViewComponent\";\n// import { professionOption, qualificationOption, statusOption } from '../selectOptions';\nimport { currentUserRole } from '../app/slices/userSlice';\n\nconst exactMatch = [\n  \"gender\",\n  \"qualification\",\n  \"martialStatus\",\n  \"maritalStatus\",\n  \"status\"\n];\n\ninterface DataType {\n  firstName: string; //table\n  lastName: string; //table\n  gender: string; //table\n  email: string; //table\n  dob: Date;\n  profession: string; //table\n  mobile: number;\n  blood: string;\n  qualification: string; //table\n  maritalStatus: string; //table\n  status: string; //table\n  members: any;\n  adminVerified: string;\n  anniversary: Date;\n  address: string; //table\n}\n\ninterface Params {\n  pagination?: TablePaginationConfig;\n  sorter?: SorterResult<any> | SorterResult<any>[];\n  total?: number;\n  sortField?: string;\n  sortOrder?: string;\n  where?: object | DataType;\n}\n\nlet totalCount: any = getRequest(\"/members/count\").then(({ count }) => {\n  totalCount = count as number;\n});\n\nconst whereBuilder = (whereObject: any | undefined) => {\n  let andObject: any = [];\n  let where: any = {};\n  if (whereObject) {\n    Object.entries(whereObject).map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return value.map((value) => {\n          if (exactMatch.includes(key)) return andObject.push({ [key]: value });\n          else return andObject.push({ [key]: { like: value, options: \"i\" } });\n        });\n      } else {\n        if (value) return andObject.push({ [key]: value });\n        return \"\";\n      }\n    });\n  }\n  Object.assign(where, { or: andObject });\n  if (where.or.length !== 0) return where;\n  return undefined;\n};\n\n/* const maritalStatusOptions: object[] = [\n  { label: \"Married\", value: \"Married\" },\n  { label: \"Unmarried\", value: \"Unmarried\" },\n  { label: \"Divorced\", value: \"Divorced\" },\n  { label: \"Widow\", value: \"Widow\" },\n  { label: \"Widower\", value: \"Widower\" },\n]; */\n\nconst TableComponent: FC = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState<TablePaginationConfig>({\n    current: 1,\n    pageSize: 10,\n  });\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [globalSearch, setGlobalSearch] = useState<string>();\n  const [refreshTable, setRefreshTable] = useState<boolean>(false);\n  const userRole = useSelector(currentUserRole);\n\n  useEffect(() => {\n    if(!globalSearch) \n      return fetchData({ pagination });\n    \n    const params: Params = {\n      pagination: pagination,\n      where: { firstName: { like: globalSearch, options: 'i' }, lastName: { like: globalSearch, options: 'i' }, gender: { like: globalSearch, options: 'i' }, email: { like: globalSearch, options: 'i' }, profession: { like: globalSearch, options: 'i' }, qualification: { like: globalSearch, options: 'i' }, maritalStatus: { like: globalSearch, options: 'i' }, status: { like: globalSearch, options: 'i' }, address: { like: globalSearch, options: 'i' }}\n    }\n    fetchData(params);\n    // eslint-disable-next-line\n  }, [globalSearch]);\n\n  useEffect(() => {\n    if(refreshTable) { fetchData({ pagination: pagination}); setRefreshTable(false);}\n    // eslint-disable-next-line\n  }, [refreshTable])\n\n\n  let headers: any = [\n    { label: 'First Name', value: 'firstName' },\n    { label: 'Last Name', value: 'lastName' },\n    { label: 'Date of Birth', value: 'dob' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Email', value: 'email' },\n    { label: 'Profession', value: 'profession' },\n    { label: 'Qualification', value: 'qualification' },\n    { label: 'Marital Status', value: 'maritalStatus' },\n    { label: 'Address', value: 'address' },\n    { label: 'Blood Group', value: 'blood' },\n    { label: 'Mobile No.', value: 'mobile' },\n  ]\n\n  const fetchData = (params: Params = {}) => {\n    let filterParams: any = {\n      limit: params.pagination?.pageSize as number,\n      order: `${params?.sortField || \"dateCreated\"} ${params?.sortOrder === \"descend\"\n        ? \"DESC\"\n        : params?.sortOrder === \"ascend\"\n          ? \"ASC\"\n          : \"DESC\"\n        }`,\n      skip:\n        (params.pagination?.pageSize as number) *\n        ((params.pagination?.current as number) - 1),\n      where: whereBuilder(params.where),\n    };\n\n    setLoading(true);\n    getRequest(\"/members\", { filter: filterParams }).then((data: any) => {\n      setData(data);\n      setLoading(false);\n      setPagination({\n        ...params.pagination,\n        total: filterParams.where === undefined ? totalCount : data.length,\n      });\n    });\n  };\n\n  /* useEffect(() => {\n    fetchData({ pagination });\n  }, []); */\n\n  const handleTableChange = (\n    newPagination: TablePaginationConfig,\n    filters: Record<string, FilterValue | null>,\n    sorter: SorterResult<any>\n  ) => {\n    fetchData({\n      sortField: sorter.field as string,\n      sortOrder: sorter.order as string,\n      pagination: newPagination,\n      where: filters,\n    });\n  };\n\n/*   const handleReset = (setSelectedKeys: any, confirm: any) => {\n    setSelectedKeys(\"\");\n    return confirm();\n  }; */\n\n  /* const getColumnSearchProps = (dataIndex: string): ColumnType<DataType> => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          placeholder={`Search Name`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          style={{ marginBottom: 8, display: \"block\" }}\n        />\n        <Button\n          onClick={() => confirm()}\n          size=\"small\"\n          style={{ width: 90 }}\n          className=\"me-1\"\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => clearFilters && handleReset(setSelectedKeys, confirm)}\n          size=\"small\"\n          style={{ width: 90 }}\n          danger\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    onFilter: (value, record: any) => {\n      return record[dataIndex]\n        .toLocaleLowerCase()\n        .includes((value as string).toLocaleLowerCase());\n    },\n    filterIcon: (filtered: boolean) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n  }); */\n\n  /* const getColumnFilterProps = (\n    dataIndex: string,\n    label: string,\n    values: object[]\n  ): ColumnType<DataType> => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <div className=\"mb-1\">{`Select ${label}`}</div>\n        <Select\n          placeholder={`Select ${label}`}\n          value={selectedKeys}\n          onChange={(value: any) => {\n            setSelectedKeys(value ? [value] : [\"\"]);\n            confirm();\n          }}\n          className=\"w-100\"\n        >\n          {values.map((option: any, index) => {\n            return (\n              <Select.Option key={index} value={option.value}>\n                {option.label}\n              </Select.Option>\n            );\n          })}\n        </Select>\n        <Button\n          onClick={() => clearFilters && handleReset(setSelectedKeys, confirm)}\n          size=\"small\"\n          className=\"mt-1 w-100\"\n          danger\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    onFilter: (value, record: any) => {\n      return record[dataIndex]\n        .toLocaleLowerCase()\n        .includes((value as string).toLocaleLowerCase());\n    },\n  }); */\n\n  const deleteRecord = (record: any) => {\n    deleteRequest('/members', record?.id).then(res => {\n      window.location.reload();\n    })\n  }\n\n  const columns: ColumnsType<DataType> = [\n    {\n      title: \"First Name\",\n      dataIndex: \"firstName\",\n      sorter: true,\n      // ...getColumnSearchProps(\"firstName\"),\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastName\",\n      sorter: true,\n      // ...getColumnSearchProps(\"lastName\"),\n    },\n    {\n      title: \"Gender\",\n      dataIndex: \"gender\",\n      /* ...getColumnFilterProps(\"gender\", \"Gender\", [\n        { label: \"Male\", value: \"Male\" },\n        { label: \"Female\", value: \"Female\" },\n        { label: \"Others\", value: \"Others\" },\n      ]), */\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      // ...getColumnSearchProps(\"email\"),\n    },\n    {\n      title: \"Profession\",\n      dataIndex: \"profession\",\n      // ...getColumnFilterProps(\"profession\", \"Profession\", professionOption),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      // ...getColumnFilterProps(\"status\", \"Status\", statusOption),\n      render: (status: string) => ['InActive','Blocked'].includes(status) ? <Tag color='red'>{status.toUpperCase()}</Tag> : <Tag color='green'>{status.toUpperCase()}</Tag>\n    },\n    {\n      title: \"Qualification\",\n      dataIndex: \"qualification\",\n      /* ...getColumnFilterProps(\n        \"qualification\",\n        \"Qualification\",\n        qualificationOption\n      ), */\n    },\n    {\n      title: \"maritalStatus\",\n      dataIndex: \"maritalStatus\",\n      /* ...getColumnFilterProps(\n        \"maritalStatus\",\n        \"MaritalStatus\",\n        maritalStatusOptions\n      ), */\n    },\n    {\n      title: \"address\",\n      dataIndex: \"address\",\n      // ...getColumnSearchProps(\"address\"),\n      ellipsis: true,\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      fixed: \"right\",\n      width: 100,\n      render: (_, record) => <Space size='middle'>\n        <EyeTwoTone className=\"fs-5\" onClick={() => confirm(record.firstName, record, userRole)} />\n        {/* <DeleteTwoTone hidden={userRole !== 'admin'} className='fs-5' onClick={() => { deleteRecord(record) } } /> */}\n        {userRole === 'admin' ? <Popconfirm\n          title=\"Are you sure to delete?\"\n          onConfirm={() => deleteRecord(record)}\n          placement='topRight'\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <DeleteTwoTone className='fs-5' />\n        </Popconfirm> : null}\n      </Space>\n    },\n  ];\n\n  const confirm = (title?: string, records?: any, userRole?: string) => {\n    Modal.info({\n      title: `${title} Information`,\n      icon: <SolutionOutlined style={{ color: 'blue-4' }} />,\n      content: <ViewComponent items={records} userRole={userRole as string} refreshTable={setRefreshTable} />,\n      okText: 'CLOSE',\n      width: 1000\n    });\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (onSelectChange: any, selectedRow: any) => {\n      setSelectedRowKeys(onSelectChange);\n      setSelectedRows(selectedRow);\n    },\n  };\n\n  const hasSelected = selectedRowKeys.length < 11;\n\n  return (\n    <>\n      <div className='mx-5 d-flex mb-2'>\n        <Input.Search placeholder='Search fields here...'\n          allowClear\n          onSearch={(value) => {\n            setGlobalSearch(value);\n          }}\n          className='mt-2'\n        >\n        </Input.Search>\n        <div className='text-end my-2 mx-1'>\n          <Button disabled={!hasSelected || selectedRowKeys.length === 0} onClick={() => { if (hasSelected) exportCSVFile(headers, selectedRows, 'Records') }}><ExportOutlined />Export</Button>\n        </div>\n      </div>\n      <Table\n        columns={columns}\n        rowKey={(record) => record.id}\n        rowSelection={rowSelection}\n        dataSource={data}\n        pagination={pagination}\n        loading={loading}\n        scroll={{ x: 2000 }}\n        onChange={handleTableChange}\n      />\n    </>\n  );\n};\n\nexport default TableComponent;","import TableComponent from \"../../TableComponent\";\n\nconst DirectoriesComponent = () => {\n  return (\n    <TableComponent />\n  )\n}\n\nexport default DirectoriesComponent;","export const genderOptions: string[] = ['Male', 'Female', 'Others'];\n\nexport const professionOptions: string[] = ['Doctor', 'Engineer', 'Others'];\n\nexport const bloodGroupOptions: string[] = ['A+', 'A-', 'AB+', 'AB-', 'B+', 'B-', 'O+', 'O-'];\n\nexport const qualificationOptions: string[] = ['10th', '12th', 'Graduate', 'PostGraduate', 'PHD'];\n\nexport const martialStatusOptions: string[] = ['Married', 'Unmarried', 'Divorced', 'Widow', 'Widower'];\n\n\nexport const relationsOptions: string[] = ['Father', 'Mother', 'Husband', 'Wife', 'Sister', 'Brother'];\n\nexport const activeOptions: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'Inactive', value: 'Inactive' },\n];\n\nexport const professionOption: object[] = [\n    { label: \"Doctor\", value: \"Doctor\" },\n    { label: \"Engineer\", value: \"Engineer\" },\n    { label: \"Other\", value: \"Other\" },\n];\n\nexport const qualificationOption: object[] = [\n    { label: \"10th\", value: \"10th\" },\n    { label: \"12th\", value: \"12th\" },\n    { label: \"Graduate\", value: \"Graduate\" },\n    { label: \"PostGraduate\", value: \"PostGraduate\" },\n    { label: \"PHD\", value: \"PHD\" },\n  ];\n\nexport const statusOption: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'InActive', value: 'InActive' },\n    { label: 'Blocked', value: 'Blocked'}\n]"],"names":["exportCSVFile","headers","items","fileTitle","csv","objArray","array","JSON","parse","str","headerLine","header","label","i","length","line","value","convertToCSV","exportedFilenmae","blob","Blob","type","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","props","useState","relationData","setRelationData","loading","setLoading","isAdmin","userRole","fetchRelation","uid","relationName","relationArray","getRequest","filter","where","then","data","push","useEffect","members","forEach","relationId","updateData","index","patchRequest","id","res","openNotification","refreshTable","catch","err","size","layout","profilePicture","contentStyle","color","width","src","className","firstName","lastName","qualification","profession","mobile","maritalStatus","gender","email","Date","dob","toDateString","blood","defaultValue","status","onChange","e","statusOption","option","active","span","address","title","map","anniversary","includes","exactMatch","totalCount","count","whereBuilder","whereObject","andObject","Object","entries","key","Array","isArray","like","options","assign","or","setData","current","pageSize","pagination","setPagination","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","globalSearch","setGlobalSearch","setRefreshTable","useSelector","currentUserRole","fetchData","params","filterParams","limit","order","sortField","sortOrder","skip","total","columns","dataIndex","sorter","render","toUpperCase","ellipsis","fixed","_","record","EyeTwoTone","onClick","confirm","onConfirm","deleteRequest","window","location","reload","deleteRecord","placement","okText","cancelText","DeleteTwoTone","records","Modal","icon","SolutionOutlined","content","rowSelection","onSelectChange","selectedRow","hasSelected","placeholder","allowClear","onSearch","disabled","ExportOutlined","rowKey","dataSource","scroll","x","newPagination","filters","field","genderOptions","professionOptions","bloodGroupOptions","qualificationOptions","martialStatusOptions","relationsOptions","activeOptions","professionOption","qualificationOption"],"sourceRoot":""}