{"version":3,"file":"static/js/335.74ed872c.chunk.js","mappings":"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","sources":["Components/pages/porfilePage/index.tsx","Components/selectOptions.ts"],"sourcesContent":["import { Button, Card, DatePicker, Form, Input, message, Modal, Select, Tooltip, Upload, UploadProps } from \"antd\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { getRequest, patchRequest, postRequest } from \"../../../services/apiHelperService\";\nimport { currentUser, currentUserRole } from \"../../app/slices/userSlice\";\nimport { activeOptions, professionOption, qualificationOption, relationsOptions } from \"../../selectOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { pushUserDetails } from \"../../app/slices/userSlice\";\nimport { openNotification } from \"../../../services/notificationService\";\nimport Search from \"antd/lib/input/Search\";\nimport { CopyOutlined, DeleteOutlined, MinusCircleOutlined, PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport Lottie from \"lottie-react\";\nimport comingSoonAmination from '../../../assets/Comingsoon.json';\n\nconst ProfileComponent = () => {\n  const [pendingMembers, setPendingMembers] = useState(0);\n  const [membersCount, setMembersCount] = useState(0);\n  const [feeds, setFeeds] = useState<any>();\n  const [coverVideoLink, setCoverVideoLink] = useState<any>();\n  const userDetails = useSelector(currentUser);\n  const userRole = useSelector(currentUserRole);\n  const dispatch = useDispatch();\n\n  const updateData = async (index: string, value: string) => {\n    await patchRequest('/members', userDetails?.id, { [index]: value }).then((res) => {\n      dispatch(pushUserDetails(res));\n      openNotification('Records Successfully Updated')\n    }).catch(err => openNotification('Some Problem Occured', 'Please try again later.'))\n  }\n\n  const onFinishMembers = (value: any) => {\n    updateData('members', value.members);\n  }\n\n  const openModal = (title: string, content: any) => {\n    Modal.info({\n      title: title,\n      content: content,\n      onOk: () => { },\n      width: '50vw'\n    })\n  }\n\n  async function getUsersCount() {\n    await getRequest('/members/count').then(res => {\n      setMembersCount(res.count);\n    });\n    await getRequest('/members',{ where: { adminVerified: 'Pending' } }).then(res => {\n      console.log(res.length);\n      setPendingMembers(res.length);\n    })\n  }\n\n  useEffect(() => {\n    getUsersCount();\n    getFeedsData();\n    getCoverVideoLink();\n  }, [])\n  console.log(feeds);\n  \n\n  // feed control panel\n  const feedsPanelContent = () => {\n    return <>\n      <Form name=\"feedsForm\"\n         onFinish={feedsOnFinish}\n         initialValues={ { feedsList: feeds?.feedsList } }\n        autoComplete=\"off\">\n        <Form.List name=\"feedsList\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name, ...restField }) => (\n                <div key={key} className=\"row mx-1\">\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'link']}\n                    className='col-10'\n                    rules={[{ type: 'url' }]}\n                  >\n                    <Input placeholder=\"Enter target url\" />\n                  </Form.Item>\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'description']}\n                    rules={[{ required: true, message: 'Missing  message' }]}\n                    className='col-10'\n                  >\n                    <Input placeholder=\"Enter Message\" />\n                  </Form.Item>\n                  <DeleteOutlined onClick={() => remove(name)} className=\"col-2 mt-2\" />\n                  {/* <MinusCircleOutlined  onClick={() => remove(name)}/> */}\n                </div>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add field\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  }\n\n  const feedsOnFinish = (event:any) => {\n    if(!feeds) return postRequest('/feeds', { feedsList: event.feedsList }).then(res => {\n      getFeedsData();\n      openNotification('Updated Feeds Successfully!')\n    })\n    return patchRequest('/feeds',feeds?.id, { feedsList: event.feedsList }).then(res => {\n      getFeedsData();\n    })\n  }\n\n  const getFeedsData = () => {\n    getRequest('/feeds').then((res:object[]) => {\n      setFeeds(res[0]);\n    })\n  }\n\n  // video panel\n\n  const videoPanelContent = () => {\n    return <>\n      <Form\n        layout=\"vertical\"\n        onFinish={videoOnFinish}\n        initialValues={{ url: coverVideoLink?.videoUrl }}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"url\"\n          label=\"Enter Video URL\"\n          rules={[{ required: true }, { type: 'url', warningOnly: true }]}\n        >\n          <Input placeholder=\"Enter valid video url\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  }\n\n  const videoOnFinish = (event:any) => {\n    if(!coverVideoLink) return postRequest('/cover-video', { videoUrl: event.url } ).then(res => {\n      getCoverVideoLink();\n      openNotification('Updated Video Successfully!')\n    })\n\n    return patchRequest('/cover-video', coverVideoLink.id, { videoUrl: event.url } ).then(res => {\n      getCoverVideoLink();\n    })\n  }\n\n  const getCoverVideoLink = () => {\n    getRequest('/cover-video').then(res => {\n      setCoverVideoLink(res[0]);\n    })\n  }\n\n  //Advertisment panel\n  \n  const props: UploadProps = {\n    beforeUpload: file => {\n      const isPNG = file.type === 'image/png';\n      if (!isPNG) {\n        message.error(`${file.name} is not a png file`);\n      }\n      return isPNG || Upload.LIST_IGNORE;\n    },\n    onChange: info => {\n      console.log(info.fileList);\n    },\n  };\n\n  const advertismentContent = () => {\n\n    return <>\n      <Form\n        layout=\"vertical\"\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          name=\"url\"\n          label=\"Enter URL\"\n          rules={[{ type: 'url', warningOnly: true }, { type: 'string' }]}\n        >\n          <Input placeholder=\"Enter your website url\" />\n        </Form.Item>\n        <Upload {...props}>\n          <Button icon={<UploadOutlined />}>Upload jpg only</Button>\n        </Upload>\n        <Form.Item\n          className=\"mt-2\"\n          label=\"Enter Description\"\n          rules={[{ required: true, message: \"missing description\" }]}\n        >\n          <Input placeholder=\"Enter Description\" />\n        </Form.Item>\n      </Form>\n    </>\n  }\n\n\n\n  const adminControls = () => {\n    return (\n      <>\n        <div className=\"text-end mt-4 me-3\">\n          <Button onClick={() => openModal('Add Members', <Lottie animationData={comingSoonAmination} loop={false} style={{ height: '150px' }} />)} >Add members</Button>\n        </div>\n        <div className=\"mx-5 my-4 row\">\n          <div className=\"col-6\">\n            <Card>\n              <div className=\"row\">\n                <div className=\"col-6 fs-2 fw-light\">\n                  {membersCount}\n                </div>\n                <div className=\"col-6\">\n                  Total Members\n                </div>\n              </div>\n            </Card>\n          </div>\n          <div className=\"col-6\">\n            <Card onClick={() => openModal('New Member Requests', <h1>New Members</h1>)} className='btn btn-outline-secondary' >\n              <div className=\"row\">\n                <div className=\"col-6 fs-2 fw-light\">{pendingMembers}</div>\n                <div className=\"col-6\">New Requests</div>\n              </div>\n            </Card>\n          </div>\n        </div>\n        <div className=\"text-center\">\n          {/* <Button type='primary' className=\"w-75 mb-3\" onClick={() => openModal('Feeds Panel', stepForm())}>Feeds Panel</Button> */}\n          <Button type='primary' className=\"w-75 mb-3\" onClick={() => openModal('Feeds Controls', feedsPanelContent())}>Feeds Panel</Button>\n          <Button type='primary' className=\"w-75 mb-3\" onClick={() => openModal('Video Controls', videoPanelContent())} >Change Video Panel</Button>\n          <Button type='primary' className=\"w-75 mb-3\" onClick={() => openModal('Advertisment Controls', advertismentContent())} >Adverisments Panel</Button>\n        </div>\n      </>\n    )\n  };\n\n  return (\n    <div className=\"row justify-content-center \">\n      <div className=\"col-md-6\">\n        <h3>User Information</h3>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>First Name</span>\n            <Input value={userDetails?.firstName} disabled />\n          </div>\n          <div className=\"col-md-6\">\n            <span>Last Name</span>\n            <Input value={userDetails?.lastName} disabled />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>Email</span>\n            <Input value={userDetails?.email} disabled />\n          </div>\n          <div className=\"col-md-6\">\n            <span>Date of Birth</span><br />\n            <DatePicker defaultValue={moment(userDetails?.dob)} format={'DD/MM/YYYY'} className='w-100' disabled />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>Blood Group</span>\n            <Input value={userDetails?.blood} disabled />\n          </div>\n          <div className=\"col-md-6\">\n            <span>Member Since</span>\n            <DatePicker defaultValue={moment(userDetails?.dateCreated)} format={'DD/MM/YYYY'} className='w-100' disabled />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>Admin Verified</span>\n            <Input value={userDetails?.adminVerified} disabled />\n          </div>\n          <div className=\"col-md-6\">\n            <span>Gender</span>\n            <Input value={userDetails?.gender} disabled />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>Active Status</span><br />\n            <Select defaultValue={userDetails?.active} className='w-100' onChange={(e) => { updateData('active', e as string) }}>\n              {activeOptions.map((value: any, index) => {\n                return <Select.Option value={value.label} key={index}>{value.value}</Select.Option>\n              })}\n            </Select>\n          </div>\n          <div className=\"col-md-6\">\n            <span>Mobile</span><br />\n            <Search defaultValue={userDetails?.mobile} maxLength={10} enterButton=\"SAVE\" size='middle' onSearch={(e) => { updateData('mobile', e as string) }} />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>UID</span><br />\n            <Input defaultValue={userDetails?.uid} readOnly className=\"w-75\" />\n            <Tooltip title=\"Copy UID\">\n              <Button onClick={() => navigator.clipboard.writeText(userDetails?.uid)} icon={<CopyOutlined />} />\n            </Tooltip>\n          </div>\n          <div className=\"col-md-6\">\n            <span>Profession</span>\n            <Select defaultValue={userDetails?.profession} className='w-100' onChange={(e) => { updateData('active', e as string) }}>\n              {professionOption.map((value: any, index) => {\n                return <Select.Option value={value.label} key={index}>{value.value}</Select.Option>\n              })}\n            </Select>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col-md-6\">\n            <span>Qualification</span>\n            <Select defaultValue={userDetails?.qualification} className='w-100' onChange={(e) => { updateData('active', e as string) }}>\n              {qualificationOption.map((value: any, index) => {\n                return <Select.Option value={value.label} key={index}>{value.value}</Select.Option>\n              })}\n            </Select>\n          </div>\n        </div>\n        <div className=\"mx-1\">\n          <span className=\"ms-1\">Members</span>\n          <Form initialValues={{ members: userDetails?.members }} onFinish={onFinishMembers} >\n            <Form.List name=\"members\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <div className='row mx-1' key={key}>\n                      <Form.Item\n                        {...restField}\n                        name={[name, \"relationId\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please enter member UID\",\n                            min: 8,\n                            max: 9\n                          },\n                        ]}\n                        className='col-5'\n                      >\n                        <Input placeholder=\"Enter Exsiting member id\" />\n                      </Form.Item>\n\n                      <Form.Item\n                        {...restField}\n                        name={[name, \"relationName\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please select relation\",\n                          },\n                        ]}\n                        className='col-5 ms-1'\n                      >\n                        <Select placeholder='Select Relation'>\n                          {relationsOptions.map((option, index) => {\n                            return <Select.Option value={option} key={index}>{option}</Select.Option>\n                          })}\n                        </Select>\n                      </Form.Item>\n                      <MinusCircleOutlined onClick={() => remove(name)} className='col-1 mt-2' />\n                    </div>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      block\n                      icon={<PlusOutlined />}\n                      className='w-75 me-1'\n                    >\n                      Add Member\n                    </Button>\n                    <Button htmlType='submit'>Save Members</Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Form>\n        </div>\n      </div>\n      <div className=\"col-md-6\">{\n        userRole === 'admin' ? adminControls() : ''\n      }</div>\n    </div>\n  )\n}\n\nexport default ProfileComponent;","export const genderOptions: string[] = ['Male', 'Female', 'Others'];\n\nexport const professionOptions: string[] = ['Doctor', 'Engineer', 'Others'];\n\nexport const bloodGroupOptions: string[] = ['A+', 'A-', 'AB+', 'AB-', 'B+', 'B-', 'O+', 'O-'];\n\nexport const qualificationOptions: string[] = ['10th', '12th', 'Graduate', 'PostGraduate', 'PHD'];\n\nexport const martialStatusOptions: string[] = ['Married', 'Unmarried', 'Divorced', 'Widow', 'Widower'];\n\n\nexport const relationsOptions: string[] = ['Father', 'Mother', 'Husband', 'Wife', 'Sister', 'Brother'];\n\nexport const activeOptions: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'Inactive', value: 'Inactive' },\n];\n\nexport const professionOption: object[] = [\n    { label: \"Doctor\", value: \"Doctor\" },\n    { label: \"Engineer\", value: \"Engineer\" },\n    { label: \"Other\", value: \"Other\" },\n];\n\nexport const qualificationOption: object[] = [\n    { label: \"10th\", value: \"10th\" },\n    { label: \"12th\", value: \"12th\" },\n    { label: \"Graduate\", value: \"Graduate\" },\n    { label: \"PostGraduate\", value: \"PostGraduate\" },\n    { label: \"PHD\", value: \"PHD\" },\n  ];\n\nexport const statusOption: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'InActive', value: 'InActive' },\n    { label: 'Blocked', value: 'Blocked'}\n]"],"names":["useState","pendingMembers","setPendingMembers","membersCount","setMembersCount","feeds","setFeeds","coverVideoLink","setCoverVideoLink","userDetails","useSelector","currentUser","userRole","currentUserRole","dispatch","useDispatch","updateData","index","value","patchRequest","id","then","res","pushUserDetails","openNotification","catch","err","openModal","title","content","Modal","onOk","width","getRequest","count","where","adminVerified","console","log","length","useEffect","getUsersCount","getFeedsData","getCoverVideoLink","feedsOnFinish","event","feedsList","postRequest","videoOnFinish","videoUrl","url","props","beforeUpload","file","isPNG","type","message","name","Upload","onChange","info","fileList","className","firstName","disabled","lastName","email","defaultValue","moment","dob","format","blood","dateCreated","gender","active","e","activeOptions","label","Search","mobile","maxLength","enterButton","size","onSearch","uid","readOnly","onClick","navigator","clipboard","writeText","icon","CopyOutlined","profession","professionOption","qualification","qualificationOption","initialValues","members","onFinish","fields","add","remove","map","key","restField","rules","required","min","max","placeholder","relationsOptions","option","MinusCircleOutlined","block","PlusOutlined","htmlType","animationData","comingSoonAmination","loop","style","height","autoComplete","DeleteOutlined","layout","warningOnly","UploadOutlined","genderOptions","professionOptions","bloodGroupOptions","qualificationOptions","martialStatusOptions","statusOption"],"sourceRoot":""}