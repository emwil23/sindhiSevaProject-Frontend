{"version":3,"file":"static/js/233.d01e011c.chunk.js","mappings":"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","sources":["Components/FileUpload/index.tsx","Components/pages/registerPage/index.tsx","Components/selectOptions.ts","../node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js"],"sourcesContent":["import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { message, Upload } from 'antd';\nimport type { UploadChangeParam } from 'antd/es/upload';\nimport type { RcFile, UploadFile, UploadProps } from 'antd/es/upload/interface';\nimport React, { useState } from 'react';\n\nconst getBase64 = (img: RcFile, callback: (url: string) => void) => {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result as string));\n  reader.readAsDataURL(img);\n};\n\nconst beforeUpload = (file: RcFile) => {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n  const isLt2K = Math.ceil(file.size / 1024) < 200; //Should be less than 200KB\n  if (!isLt2K) {\n    message.error('Image must smaller than 200KB!');\n  }\n  return isJpgOrPng && isLt2K;\n};\n\ninterface Props {\n    storageUrl:any\n}\n\nconst FileUpload: React.FC<Props> = ({ storageUrl }) => {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState<string>();\n\n  const handleChange: UploadProps['onChange'] = (info: UploadChangeParam<UploadFile>) => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj as RcFile, url => {\n        setLoading(false);\n        setImageUrl(info.file.response[0]?.Location);\n        storageUrl(info.file.response[0]?.Location);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <Upload\n      name=\"avatar\"\n      listType=\"picture-card\"\n      className=\"avatar-uploader\"\n      showUploadList={false}\n      method='POST'\n      action=\"https://sindhi-seva-app.herokuapp.com/store/profile/upload\"\n      beforeUpload={beforeUpload}\n      onChange={handleChange}\n    >\n      {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n    </Upload>\n  );\n};\n\nexport default FileUpload;","import { FC, useDeferredValue, useState } from 'react';\nimport Lottie from 'lottie-react';\nimport registrationLottie from '../../../assets/register.json';\nimport { Button, DatePicker, Form, Input, Select } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { genderOptions, professionOptions, bloodGroupOptions, qualificationOptions, martialStatusOptions, relationsOptions } from '../../selectOptions';\nimport { postRequest } from '../../../services/apiHelperService';\nimport { openNotification } from '../../../services/notificationService';\nimport { pushUserDetails } from '../../app/slices/userSlice';\nimport { loggedInTrue } from '../../app/slices/authSlice';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport PhoneInput, { isValidPhoneNumber } from 'react-phone-number-input';\nimport OTPInput, { ResendOTP } from 'otp-input-react';\nimport React from 'react';\nimport FileUpload from '../../FileUpload';\n\nconst RegisterComponent: FC = () => {\n  const [hideAnniversary, setHideAnniversary] = useState(true);\n  const [phoneNumber, setPhoneNumber] = useState<string>();\n  const [OTP, setOTP] = useState<number>();\n  const [step, setStep] = useState('otp');\n  const [otpAttempted, setOtpAttempted] = useState<number>(0);\n  const [profileUrl, setProfileUrl] = useState();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onMartialStatusChange = (value: string) => {\n    switch(value){\n      case 'Married': \n        setHideAnniversary(false);\n        return;\n      default:\n        setHideAnniversary(true);\n        return;\n    }\n  }\n\n  const onFinish = (values: any) => {\n    if (values.dob) {\n      let dob = new Date(values?.dob);\n      values.dob = `${dob.getFullYear()}-${dob.getMonth() < 10 ? `0${dob.getMonth()}` : dob.getMonth()}-${dob.getDate() < 10 ? `0${dob.getDate()}` : dob.getDate()}`\n    }\n    if (values.anniversary) {\n      let date = new Date(values.anniversary);\n      values.anniversary = `${date.getFullYear()}-${date.getMonth() < 10 ? `0${date.getMonth()}` : date.getMonth()}-${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}`\n    }\n    values.mobile = phoneNumber;\n    if(profileUrl)\n      values.profilePicture = profileUrl;\n    postRequest('/signup', values).then(res => {\n      dispatch(loggedInTrue());\n      dispatch(pushUserDetails(res));\n      openNotification('SignUp Successful');\n      navigate('/', { replace: true});\n    }).catch(() => openNotification('Problem occured while signup', 'Retry after some time.'))\n  };\n\n  const verifyPhoneNumber = (mobile: string): boolean => {\n    return isValidPhoneNumber(mobile);\n  }\n\n  const sendOtp = (mobile: string) => {\n    if(verifyPhoneNumber(mobile)){\n      postRequest(`/otp-signup/${mobile}`).then(res => {\n        if(res.isExists)\n          openNotification('User Exists');\n        else{\n          openNotification(res.message);\n          setStep('otp-verification');\n        }\n      })\n    }\n  }\n\n  const resendOtp = () => {\n    if (otpAttempted >= 3)\n      openNotification('Too many Attepmts', 'Please try again later');\n    else\n      postRequest(`/otp-signup/${phoneNumber}`).then(res => {\n        openNotification(res.message);\n        setOtpAttempted(otpAttempted + 1);\n      })\n  }\n\n  const verifyOtp = (otp: number) => {\n    postRequest(`/otp-verification/${phoneNumber}/${otp as number}`).then(res => {\n      if(res.varified){\n        openNotification('Verification successful');\n        setStep('form');\n      }\n    })\n  }\n\n  const renderButton = (buttonProps: any) => {\n    return (\n      <Button disabled={otpAttempted >= 3} className='mt-4' {...buttonProps}>\n        {buttonProps.remainingTime !== 0 ? `Please wait for ${buttonProps.remainingTime} sec` : \"Resend\"}\n      </Button>\n    );\n  };\n  const renderTime = () => React.Fragment;\n\n  return (\n    <div className=\"container my-5\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md-6\">\n          { step === 'otp' ? \n          <>\n              <PhoneInput\n                placeholder=\"Enter phone number\"\n                value={phoneNumber}\n                onChange={setPhoneNumber} \n                defaultCountry='IN'\n                />\n              <div className='text-end'>\n              <Button className='mt-4' onClick={() => sendOtp(phoneNumber as string)}>Send OTP</Button>\n              </div>\n          </> \n          : step === 'otp-verification' ? \n          <div className='d-flex align-items-center flex-column '>\n            <OTPInput value={OTP} onChange={setOTP} autoFocus OTPLength={4} otpType=\"number\" disabled={false} />\n            <div className='d-flex align-items-center'>\n              <ResendOTP onResendClick={() => resendOtp()} renderButton={renderButton} renderTime={renderTime} />\n              <Button className='mt-4 ms-3' onClick={() => verifyOtp(OTP as number)}>Verify OTP</Button>\n            </div>\n          </div> \n          : <Form onFinish={onFinish} layout=\"vertical\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter first name\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Enter your first name\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter last name\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Enter your last name\" />\n                </Form.Item>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='col-md-6'>\n                <FileUpload storageUrl={setProfileUrl} />\n              </div>\n            </div>\n            {/* <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Password\"\n                  name=\"password\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter the password\",\n                      type: \"string\",\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(_, value: string) {\n                        if (!value || value.length >= 6) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          new Error(\"Password length should be more than 6!\")\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password placeholder=\"Enter the password\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  dependencies={[\"password\"]}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter same password\",\n                      type: \"string\",\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          new Error(\n                            \"The two passwords that you entered do not match!\"\n                          )\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password placeholder=\"Confirm the password\" />\n                </Form.Item>\n              </div>\n            </div> */}\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      // required: true,\n                      message: \"Please enter the Email\",\n                      type: 'email',\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Enter your email\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Date of Birth\"\n                  name=\"dob\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select date\",\n                      type: \"date\",\n                    },\n                  ]}\n                >\n                  <DatePicker placeholder=\"select date\" className=\"w-100\" format={'YYYY-MM-DD'} />\n                </Form.Item>\n              </div>\n            </div>\n          \n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Gender\"\n                  name=\"gender\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select the gender\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select gender\">\n                    {genderOptions.map((option, index) => {\n                      return <Select.Option value={option} key={index}>{option}</Select.Option>\n                    })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Profession\"\n                  name=\"profession\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select the Profession\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select Profession\">\n                    {professionOptions.map((option, index) => {\n                      return <Select.Option value={option} key={index}>{option}</Select.Option>\n                    })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Phone\"\n                  name=\"mobile\"\n                  rules={[\n                    {\n                      // required: true,\n                      message: \"Please enter mobile number\",\n                      type: 'string',\n                    },\n                  ]}\n                >\n                  <Input defaultValue={phoneNumber} disabled type={'string'} placeholder=\"Enter Mobile Number\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Blood Group\"\n                  name=\"blood\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter blood group\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Select placeholder='Select Blood Group'>\n                    {bloodGroupOptions.map((option, index) => {\n                      return <Select.Option value={option} key={index}>{option}</Select.Option>\n                    })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Qualification\"\n                  name=\"qualification\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter qualification\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select\">\n                    {qualificationOptions.map((option, index) => {\n                      return <Select.Option value={option} key={index}>{option}</Select.Option>\n                    })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Item\n                  label=\"Marital Status\"\n                  name=\"maritalStatus\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select marital status\",\n                      type: \"string\",\n                    },\n                  ]}\n                >\n                  <Select placeholder=\"Select\" onChange={onMartialStatusChange}>\n                    {martialStatusOptions.map((option, index) => {\n                      return <Select.Option value={option} key={index}>{option}</Select.Option>\n                    })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n            <Form.Item\n              label=\"Anniversary Date\"\n              name=\"anniversary\"\n              rules={[\n                {\n                  required: false,\n                  message: \"Please select date\",\n                  type: \"date\",\n                }\n              ]}\n              hidden={hideAnniversary}\n            >\n              <DatePicker placeholder=\"select date\" className=\"w-100\" format={'YYYY-MM-DD'} />\n            </Form.Item>\n            <Form.Item\n              label=\"Address\"\n              name=\"address\"\n              rules={[\n                {\n                  // required: true,\n                  message: \"Please enter address\",\n                  type: \"string\",\n                },\n              ]}\n            >\n              <TextArea rows={3} placeholder=\"Enter Address\" />\n            </Form.Item>\n            <Form.List name=\"members\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, ...restField }) => (\n                    <div className='row mx-1' key={key}>\n                      <Form.Item\n                        {...restField}\n                        name={[name, \"relationId\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please enter member UID\",\n                            min: 8,\n                            max: 9\n                          },\n                        ]}\n                        className='col-5'\n                      >\n                        <Input placeholder=\"Enter Exsiting member id\" />\n                      </Form.Item>\n\n                      <Form.Item\n                        {...restField}\n                        name={[name, \"relationName\"]}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please select relation\",\n                          },\n                        ]}\n                        className='col-5 ms-1'\n                      >\n                        <Select placeholder='Select Relation'>\n                          {relationsOptions.map((option, index) => {\n                            return <Select.Option value={option} key={index}>{option}</Select.Option>\n                          })}\n                        </Select>\n                      </Form.Item>\n\n                      <MinusCircleOutlined onClick={() => remove(name)} className='col-1 mt-2' />\n                    </div>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      block\n                      icon={<PlusOutlined />}\n                    >\n                      Add Member\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n            <div>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                </Button>\n              </Form.Item>\n            </div>\n          </Form> }\n        </div>\n        <div className=\"col-md-6\">\n          <Lottie animationData={registrationLottie} loop={false} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComponent;","export const genderOptions: string[] = ['Male', 'Female', 'Others'];\n\nexport const professionOptions: string[] = ['Doctor', 'Engineer', 'Others'];\n\nexport const bloodGroupOptions: string[] = ['A+', 'A-', 'AB+', 'AB-', 'B+', 'B-', 'O+', 'O-'];\n\nexport const qualificationOptions: string[] = ['10th', '12th', 'Graduate', 'PostGraduate', 'PHD'];\n\nexport const martialStatusOptions: string[] = ['Married', 'Unmarried', 'Divorced', 'Widow', 'Widower'];\n\n\nexport const relationsOptions: string[] = ['Father', 'Mother', 'Husband', 'Wife', 'Sister', 'Brother'];\n\nexport const activeOptions: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'Inactive', value: 'Inactive' },\n];\n\nexport const professionOption: object[] = [\n    { label: \"Doctor\", value: \"Doctor\" },\n    { label: \"Engineer\", value: \"Engineer\" },\n    { label: \"Other\", value: \"Other\" },\n];\n\nexport const qualificationOption: object[] = [\n    { label: \"10th\", value: \"10th\" },\n    { label: \"12th\", value: \"12th\" },\n    { label: \"Graduate\", value: \"Graduate\" },\n    { label: \"PostGraduate\", value: \"PostGraduate\" },\n    { label: \"PHD\", value: \"PHD\" },\n  ];\n\nexport const statusOption: object[] = [\n    { label: 'Active', value: 'Active' },\n    { label: 'InActive', value: 'InActive' },\n    { label: 'Blocked', value: 'Blocked'}\n]","// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);"],"names":["beforeUpload","file","isJpgOrPng","type","message","isLt2K","Math","ceil","size","storageUrl","useState","loading","setLoading","imageUrl","setImageUrl","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","name","listType","className","showUploadList","method","action","onChange","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","url","response","Location","src","alt","width","hideAnniversary","setHideAnniversary","phoneNumber","setPhoneNumber","OTP","setOTP","step","setStep","otpAttempted","setOtpAttempted","profileUrl","setProfileUrl","dispatch","useDispatch","navigate","useNavigate","sendOtp","mobile","isValidPhoneNumber","verifyPhoneNumber","postRequest","then","res","isExists","openNotification","placeholder","value","defaultCountry","onClick","autoFocus","OTPLength","otpType","disabled","ResendOTP","onResendClick","renderButton","buttonProps","remainingTime","renderTime","React","otp","varified","onFinish","values","dob","Date","getFullYear","getMonth","getDate","anniversary","date","profilePicture","loggedInTrue","pushUserDetails","replace","catch","layout","label","rules","required","format","genderOptions","option","index","professionOptions","defaultValue","bloodGroupOptions","qualificationOptions","martialStatusOptions","hidden","TextArea","rows","fields","add","remove","map","key","restField","min","max","relationsOptions","MinusCircleOutlined","block","icon","htmlType","animationData","registrationLottie","loop","activeOptions","professionOption","qualificationOption","statusOption","props","ref","AntdIcon","_objectSpread","PlusOutlinedSvg","displayName"],"sourceRoot":""}